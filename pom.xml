<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.sagebionetworks</groupId>
	<artifactId>portal</artifactId>
	<packaging>war</packaging>
	<version>develop-SNAPSHOT</version>
	<name>Synapse Portal</name>

	<properties>
		<!-- Synapse Web Client "Dave jira". -->
		<!-- GWT needs at least java 1.5 -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
		<synapse.version>2012-08-08-dca2297-51</synapse.version>
		<gwtVersion>2.4.0</gwtVersion>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
		<guiceVersion>3.0-rc2</guiceVersion>
		<xstream.version>1.3.1</xstream.version>
		<schema-to-pojo.version>0.1.21</schema-to-pojo.version>
		<org.json.version>20090211</org.json.version>
		<jackson.version>1.8.1</jackson.version>
	</properties>

	<repositories>
		<repository>
			<id>sagebionetworks-releases-local</id>
			<name>sagebionetworks-releases-local</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<repository>
			<id>sagebionetworks-ext</id>
			<name>sagebionetworks-releases-ext</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/ext-releases-local
			</url>
		</repository>
		<repository>
			<id>atlassian-m2-repository</id>
			<url>https://m2proxy.atlassian.com/repository/public</url>
		</repository>
		<repository>
			<id>mvn-gae-plugin-repo</id>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</repository>
		<repository>
			<id>maven-central-rep-1</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>sun-maven-repository</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>apache-repo-releases</id>
			<url>https://repository.apache.org/content/repositories/releases/
			</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>sagebionetworks-plugins-releases-local</id>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/plugins-releases-local/
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>http://snapshots.repository.codehaus.org/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<pluginManagement>
			<plugins>
				<!-- Tell the eclipse m2e plugin to execute these lifecycle mappings 
					See: http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.sagebionetworks</groupId>
										<artifactId>schema-to-pojo-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>clean</goal>
											<goal>compile</goal>
											<goal>test</goal>
											<goal>i18n</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-war-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.4.0</version>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>compile</goal>
							<goal>test</goal>
							<goal>i18n</goal>
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
					documentation at codehaus.org -->
				<configuration>
					<runTarget>Portal.html</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<i18nMessagesBundle>org.sagebionetworks.web.client.Messages</i18nMessagesBundle>
					<!-- There are the GWT tests -->
					<includes>**/*GwtTest*.java</includes>
					<!-- Run the GWT test with the headless html unit. -->
					<mode>htmlunit</mode>
					<module>org.sagebionetworks.web.Portal</module>
				</configuration>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
					<!-- This will create a jar that can be used for integration testing -->
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>

			<!-- We use this assembly to package the GWT RPC dependencies so they 
				are aviablible fore integration testing. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/gwt-rpc-assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
			<version>${synapse.version}</version>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>bccSetup</artifactId>
			<version>${synapse.version}</version>
		</dependency>


		<!-- Make sure all the Jackson libraries are of the same version -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-xc</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Using the Spring RestTemplate for all REST calls -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.httpclient</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guiceVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt.inject</groupId>
			<artifactId>gin</artifactId>
			<version>1.5.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.inject.extensions</groupId>
			<artifactId>guice-servlet</artifactId>
			<version>${guiceVersion}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
			<version>1.5-ea09</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
			<version>1.5-ea09</version>
		</dependency>
		<!-- This provides the GWT MVP framework -->
		<dependency>
			<groupId>com.gwtplatform</groupId>
			<artifactId>gwtp-all</artifactId>
			<version>0.7</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.develop</groupId>
			<artifactId>gwt-syncproxy</artifactId>
			<version>0.2</version>
			<scope>test</scope>
		</dependency>
		<!-- We are using this to serialize column metadata. We can drop it when 
			the API provides this functionality -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>${xstream.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-shared-models</artifactId>
			<version>${synapse.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>schema-to-pojo-gwt</artifactId>
			<version>${schema-to-pojo.version}</version>
		</dependency>

		<!-- Test only dependencies -->
		<dependency>
			<groupId>com.sun.grizzly</groupId>
			<artifactId>grizzly-servlet-webserver</artifactId>
			<version>1.9.18-i</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jukito</groupId>
			<artifactId>jukito</artifactId>
			<version>1.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.extjs</groupId>
			<artifactId>gxt</artifactId>
			<version>2.2.5</version>
			<classifier>gwt22</classifier>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${org.json.version}</version>
		</dependency>

		<!-- Scribe library, imported for OAuth for LinkedIn -->
		<dependency>
			<groupId>org.scribe</groupId>
			<artifactId>scribe</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava-io</artifactId>
			<version>r03</version>
		</dependency>

	</dependencies>

	<distributionManagement>
		<repository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-releases</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<snapshotRepository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-snapshots</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-snapshots-local
			</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>

	</distributionManagement>

</project>