(function(){jsPlumb.DOMElementComponent=function(params){jsPlumb.jsPlumbUIComponent.apply(this,arguments);this.mousemove=this.dblclick=this.click=this.mousedown=this.mouseup=function(e){};};jsPlumb.Connectors.Straight=function(){this.type="Straight";var self=this,currentPoints=null,_m,_m2,_b,_dx,_dy,_theta,_theta2,_sx,_sy,_tx,_ty,_segment,_length;this.compute=function(sourcePos,targetPos,sourceEndpoint,targetEndpoint,sourceAnchor,targetAnchor,lineWidth,minWidth){var w=Math.abs(sourcePos[0]-targetPos[0]),h=Math.abs(sourcePos[1]-targetPos[1]),xo=0.45*w,yo=0.45*h;w*=1.9;h*=1.9;var x=Math.min(sourcePos[0],targetPos[0])-xo;var y=Math.min(sourcePos[1],targetPos[1])-yo;var calculatedMinWidth=Math.max(2*lineWidth,minWidth);if(w<calculatedMinWidth){w=calculatedMinWidth;x=sourcePos[0]+((targetPos[0]-sourcePos[0])/2)-(calculatedMinWidth/2);xo=(w-Math.abs(sourcePos[0]-targetPos[0]))/2;}
if(h<calculatedMinWidth){h=calculatedMinWidth;y=sourcePos[1]+((targetPos[1]-sourcePos[1])/2)-(calculatedMinWidth/2);yo=(h-Math.abs(sourcePos[1]-targetPos[1]))/2;}
_sx=sourcePos[0]<targetPos[0]?xo:w-xo;_sy=sourcePos[1]<targetPos[1]?yo:h-yo;_tx=sourcePos[0]<targetPos[0]?w-xo:xo;_ty=sourcePos[1]<targetPos[1]?h-yo:yo;currentPoints=[x,y,w,h,_sx,_sy,_tx,_ty];_dx=_tx-_sx,_dy=_ty-_sy;_m=jsPlumbUtil.gradient({x:_sx,y:_sy},{x:_tx,y:_ty}),_m2=-1/_m;_b=-1*((_m*_sx)-_sy);_theta=Math.atan(_m);_theta2=Math.atan(_m2);_length=Math.sqrt((_dx*_dx)+(_dy*_dy));return currentPoints;};this.pointOnPath=function(location,absolute){if(location==0&&!absolute)
return{x:_sx,y:_sy};else if(location==1&&!absolute)
return{x:_tx,y:_ty};else{var l=absolute?location>0?location:_length+location:location*_length;return jsPlumbUtil.pointOnLine({x:_sx,y:_sy},{x:_tx,y:_ty},l);}};this.gradientAtPoint=function(location){return _m;};this.pointAlongPathFrom=function(location,distance,absolute){var p=self.pointOnPath(location,absolute),farAwayPoint=location==1?{x:_sx+((_tx-_sx)*10),y:_sy+((_sy-_ty)*10)}:{x:_tx,y:_ty};return jsPlumbUtil.pointOnLine(p,farAwayPoint,distance);};};jsPlumb.Connectors.Bezier=function(params){var self=this;params=params||{};this.majorAnchor=params.curviness||150;this.minorAnchor=10;var currentPoints=null;this.type="Bezier";this._findControlPoint=function(point,sourceAnchorPosition,targetAnchorPosition,sourceEndpoint,targetEndpoint,sourceAnchor,targetAnchor){var soo=sourceAnchor.getOrientation(sourceEndpoint),too=targetAnchor.getOrientation(targetEndpoint),perpendicular=soo[0]!=too[0]||soo[1]==too[1],p=[],ma=self.majorAnchor,mi=self.minorAnchor;if(!perpendicular){if(soo[0]==0)
p.push(sourceAnchorPosition[0]<targetAnchorPosition[0]?point[0]+mi:point[0]-mi);else p.push(point[0]-(ma*soo[0]));if(soo[1]==0)
p.push(sourceAnchorPosition[1]<targetAnchorPosition[1]?point[1]+mi:point[1]-mi);else p.push(point[1]+(ma*too[1]));}
else{if(too[0]==0)
p.push(targetAnchorPosition[0]<sourceAnchorPosition[0]?point[0]+mi:point[0]-mi);else p.push(point[0]+(ma*too[0]));if(too[1]==0)
p.push(targetAnchorPosition[1]<sourceAnchorPosition[1]?point[1]+mi:point[1]-mi);else p.push(point[1]+(ma*soo[1]));}
return p;};var _CP,_CP2,_sx,_tx,_ty,_sx,_sy,_canvasX,_canvasY,_w,_h,_sStubX,_sStubY,_tStubX,_tStubY;this.compute=function(sourcePos,targetPos,sourceEndpoint,targetEndpoint,sourceAnchor,targetAnchor,lineWidth,minWidth){lineWidth=lineWidth||0;_w=Math.abs(sourcePos[0]-targetPos[0])+lineWidth;_h=Math.abs(sourcePos[1]-targetPos[1])+lineWidth;_canvasX=Math.min(sourcePos[0],targetPos[0])-(lineWidth/2);_canvasY=Math.min(sourcePos[1],targetPos[1])-(lineWidth/2);_sx=sourcePos[0]<targetPos[0]?_w-(lineWidth/2):(lineWidth/2);_sy=sourcePos[1]<targetPos[1]?_h-(lineWidth/2):(lineWidth/2);_tx=sourcePos[0]<targetPos[0]?(lineWidth/2):_w-(lineWidth/2);_ty=sourcePos[1]<targetPos[1]?(lineWidth/2):_h-(lineWidth/2);_CP=self._findControlPoint([_sx,_sy],sourcePos,targetPos,sourceEndpoint,targetEndpoint,sourceAnchor,targetAnchor);_CP2=self._findControlPoint([_tx,_ty],targetPos,sourcePos,targetEndpoint,sourceEndpoint,targetAnchor,sourceAnchor);var minx1=Math.min(_sx,_tx),minx2=Math.min(_CP[0],_CP2[0]),minx=Math.min(minx1,minx2),maxx1=Math.max(_sx,_tx),maxx2=Math.max(_CP[0],_CP2[0]),maxx=Math.max(maxx1,maxx2);if(maxx>_w)_w=maxx;if(minx<0){_canvasX+=minx;var ox=Math.abs(minx);_w+=ox;_CP[0]+=ox;_sx+=ox;_tx+=ox;_CP2[0]+=ox;}
var miny1=Math.min(_sy,_ty),miny2=Math.min(_CP[1],_CP2[1]),miny=Math.min(miny1,miny2),maxy1=Math.max(_sy,_ty),maxy2=Math.max(_CP[1],_CP2[1]),maxy=Math.max(maxy1,maxy2);if(maxy>_h)_h=maxy;if(miny<0){_canvasY+=miny;var oy=Math.abs(miny);_h+=oy;_CP[1]+=oy;_sy+=oy;_ty+=oy;_CP2[1]+=oy;}
if(minWidth&&_w<minWidth){var posAdjust=(minWidth-_w)/2;_w=minWidth;_canvasX-=posAdjust;_sx=_sx+posAdjust;_tx=_tx+posAdjust;_CP[0]=_CP[0]+posAdjust;_CP2[0]=_CP2[0]+posAdjust;}
if(minWidth&&_h<minWidth){var posAdjust=(minWidth-_h)/2;_h=minWidth;_canvasY-=posAdjust;_sy=_sy+posAdjust;_ty=_ty+posAdjust;_CP[1]=_CP[1]+posAdjust;_CP2[1]=_CP2[1]+posAdjust;}
currentPoints=[_canvasX,_canvasY,_w,_h,_sx,_sy,_tx,_ty,_CP[0],_CP[1],_CP2[0],_CP2[1]];return currentPoints;};var _makeCurve=function(){return[{x:_sx,y:_sy},{x:_CP[0],y:_CP[1]},{x:_CP2[0],y:_CP2[1]},{x:_tx,y:_ty}];};var _translateLocation=function(curve,location,absolute){if(absolute)
location=jsBezier.locationAlongCurveFrom(curve,location>0?0:1,location);return location;};this.pointOnPath=function(location,absolute){var c=_makeCurve();location=_translateLocation(c,location,absolute);return jsBezier.pointOnCurve(c,location);};this.gradientAtPoint=function(location,absolute){var c=_makeCurve();location=_translateLocation(c,location,absolute);return jsBezier.gradientAtPoint(c,location);};this.pointAlongPathFrom=function(location,distance,absolute){var c=_makeCurve();location=_translateLocation(c,location,absolute);return jsBezier.pointAlongCurveFrom(c,location,distance);};};jsPlumb.Connectors.Flowchart=function(params){this.type="Flowchart";params=params||{};var self=this,stub=params.stub||params.minStubLength||30,sourceStub=jsPlumbUtil.isArray(stub)?stub[0]:stub,targetStub=jsPlumbUtil.isArray(stub)?stub[1]:stub,gap=params.gap||0,segments=[],totalLength=0,segmentProportions=[],segmentProportionalLengths=[],points=[],swapX,swapY,maxX=-Infinity,maxY=-Infinity,minX=Infinity,minY=Infinity,grid=params.grid,_gridClamp=function(n,g){var e=n%g,f=Math.floor(n/g),inc=e>(g/2)?1:0;return(f+inc)*g;},clampToGrid=function(x,y,dontClampX,dontClampY){return[dontClampX||grid==null?x:_gridClamp(x,grid[0]),dontClampY||grid==null?y:_gridClamp(y,grid[1])];},updateSegmentProportions=function(startX,startY,endX,endY){var curLoc=0;for(var i=0;i<segments.length;i++){segmentProportionalLengths[i]=segments[i][5]/totalLength;segmentProportions[i]=[curLoc,(curLoc+=(segments[i][5]/totalLength))];}},appendSegmentsToPoints=function(){points.push(segments.length);for(var i=0;i<segments.length;i++){points.push(segments[i][0]);points.push(segments[i][1]);}},addSegment=function(x,y,sx,sy,tx,ty){var lx=segments.length==0?sx:segments[segments.length-1][0],ly=segments.length==0?sy:segments[segments.length-1][1],m=x==lx?Infinity:0,l=Math.abs(x==lx?y-ly:x-lx);segments.push([x,y,lx,ly,m,l]);totalLength+=l;maxX=Math.max(maxX,x);maxY=Math.max(maxY,y);minX=Math.min(minX,x);minY=Math.min(minY,y);},findSegmentForLocation=function(location,absolute){if(absolute){location=location>0?location/totalLength:(totalLength+location)/totalLength;}
var idx=segmentProportions.length-1,inSegmentProportion=1;for(var i=0;i<segmentProportions.length;i++){if(segmentProportions[i][1]>=location){idx=i;inSegmentProportion=(location-segmentProportions[i][0])/segmentProportionalLengths[i];break;}}
return{segment:segments[idx],proportion:inSegmentProportion,index:idx};};this.compute=function(sourcePos,targetPos,sourceEndpoint,targetEndpoint,sourceAnchor,targetAnchor,lineWidth,minWidth,sourceInfo,targetInfo){segments=[];segmentProportions=[];totalLength=0;segmentProportionalLengths=[];maxX=maxY=-Infinity;minX=minY=Infinity;swapX=targetPos[0]<sourcePos[0];swapY=targetPos[1]<sourcePos[1];var lw=lineWidth||1,sourceOffx=(lw/2)+(sourceStub+targetStub),targetOffx=(lw/2)+(targetStub+sourceStub),sourceOffy=(lw/2)+(sourceStub+targetStub),targetOffy=(lw/2)+(targetStub+sourceStub),so=sourceAnchor.orientation||sourceAnchor.getOrientation(sourceEndpoint),to=targetAnchor.orientation||targetAnchor.getOrientation(targetEndpoint),x=swapX?targetPos[0]:sourcePos[0],y=swapY?targetPos[1]:sourcePos[1],w=Math.abs(targetPos[0]-sourcePos[0])+sourceOffx+targetOffx,h=Math.abs(targetPos[1]-sourcePos[1])+sourceOffy+targetOffy;if(so[0]==0&&so[1]==0||to[0]==0&&to[1]==0){var index=w>h?0:1,oIndex=[1,0][index];so=[];to=[];so[index]=sourcePos[index]>targetPos[index]?-1:1;to[index]=sourcePos[index]>targetPos[index]?1:-1;so[oIndex]=0;to[oIndex]=0;}
var sx=swapX?(w-targetOffx)+(gap*so[0]):sourceOffx+(gap*so[0]),sy=swapY?(h-targetOffy)+(gap*so[1]):sourceOffy+(gap*so[1]),tx=swapX?sourceOffx+(gap*to[0]):(w-targetOffx)+(gap*to[0]),ty=swapY?sourceOffy+(gap*to[1]):(h-targetOffy)+(gap*to[1]),startStubX=sx+(so[0]*sourceStub),startStubY=sy+(so[1]*sourceStub),endStubX=tx+(to[0]*targetStub),endStubY=ty+(to[1]*targetStub),isXGreaterThanStubTimes2=Math.abs(sx-tx)>(sourceStub+targetStub),isYGreaterThanStubTimes2=Math.abs(sy-ty)>(sourceStub+targetStub),midx=startStubX+((endStubX-startStubX)/2),midy=startStubY+((endStubY-startStubY)/2),oProduct=((so[0]*to[0])+(so[1]*to[1])),opposite=oProduct==-1,perpendicular=oProduct==0,orthogonal=oProduct==1;x-=sourceOffx;y-=sourceOffy;points=[x,y,w,h,sx,sy,tx,ty];var extraPoints=[];var sourceAxis=so[0]==0?"y":"x",anchorOrientation=opposite?"opposite":orthogonal?"orthogonal":"perpendicular",segment=jsPlumbUtil.segment([sx,sy],[tx,ty]),flipSourceSegments=so[sourceAxis=="x"?0:1]==-1,flipSegments={"x":[null,4,3,2,1],"y":[null,2,1,4,3]}
if(flipSourceSegments)
segment=flipSegments[sourceAxis][segment];addSegment(startStubX,startStubY,sx,sy,tx,ty);var findClearedLine=function(start,mult,anchorPos,dimension){return start+(mult*((1-anchorPos)*dimension)+Math.max(sourceStub,targetStub));},lineCalculators={oppositex:function(){if(sourceEndpoint.elementId==targetEndpoint.elementId){var _y=startStubY+((1-sourceAnchor.y)*sourceInfo.height)+Math.max(sourceStub,targetStub);return[[startStubX,_y],[endStubX,_y]];}
else if(isXGreaterThanStubTimes2&&(segment==1||segment==2)){return[[midx,sy],[midx,ty]];}
else{return[[startStubX,midy],[endStubX,midy]];}},orthogonalx:function(){if(segment==1||segment==2){return[[endStubX,startStubY]];}
else{return[[startStubX,endStubY]];}},perpendicularx:function(){var my=(ty+sy)/2;if((segment==1&&to[1]==1)||(segment==2&&to[1]==-1)){if(Math.abs(tx-sx)>Math.max(sourceStub,targetStub))
return[[endStubX,startStubY]];else
return[[startStubX,startStubY],[startStubX,my],[endStubX,my]];}
else if((segment==3&&to[1]==-1)||(segment==4&&to[1]==1)){return[[startStubX,my],[endStubX,my]];}
else if((segment==3&&to[1]==1)||(segment==4&&to[1]==-1)){return[[startStubX,endStubY]];}
else if((segment==1&&to[1]==-1)||(segment==2&&to[1]==1)){if(Math.abs(tx-sx)>Math.max(sourceStub,targetStub))
return[[midx,startStubY],[midx,endStubY]];else
return[[startStubX,endStubY]];}},oppositey:function(){if(sourceEndpoint.elementId==targetEndpoint.elementId){var _x=startStubX+((1-sourceAnchor.x)*sourceInfo.width)+Math.max(sourceStub,targetStub);return[[_x,startStubY],[_x,endStubY]];}
else if(isYGreaterThanStubTimes2&&(segment==2||segment==3)){return[[sx,midy],[tx,midy]];}
else{return[[midx,startStubY],[midx,endStubY]];}},orthogonaly:function(){if(segment==2||segment==3){return[[startStubX,endStubY]];}
else{return[[endStubX,startStubY]];}},perpendiculary:function(){var mx=(tx+sx)/2;if((segment==2&&to[0]==-1)||(segment==3&&to[0]==1)){if(Math.abs(tx-sx)>Math.max(sourceStub,targetStub))
return[[startStubX,endStubY]];else
return[[startStubX,midy],[endStubX,midy]];}
else if((segment==1&&to[0]==-1)||(segment==4&&to[0]==1)){var mx=(tx+sx)/2;return[[mx,startStubY],[mx,endStubY]];}
else if((segment==1&&to[0]==1)||(segment==4&&to[0]==-1)){return[[endStubX,startStubY]];}
else if((segment==2&&to[0]==1)||(segment==3&&to[0]==-1)){if(Math.abs(ty-sy)>Math.max(sourceStub,targetStub))
return[[startStubX,midy],[endStubX,midy]];else
return[[endStubX,startStubY]];}}};var p=lineCalculators[anchorOrientation+sourceAxis]();if(p){for(var i=0;i<p.length;i++){addSegment(p[i][0],p[i][1],sx,sy,tx,ty);}}
addSegment(endStubX,endStubY,sx,sy,tx,ty);addSegment(tx,ty,sx,sy,tx,ty);appendSegmentsToPoints();updateSegmentProportions(sx,sy,tx,ty);if(maxY>points[3])points[3]=maxY+(lineWidth*2);if(maxX>points[2])points[2]=maxX+(lineWidth*2);return points;};this.pointOnPath=function(location,absolute){return self.pointAlongPathFrom(location,0,absolute);};this.gradientAtPoint=function(location,absolute){return segments[findSegmentForLocation(location,absolute)["index"]][4];};this.pointAlongPathFrom=function(location,distance,absolute){var s=findSegmentForLocation(location,absolute),seg=s.segment,p=s.proportion,sl=segments[s.index][5],m=segments[s.index][4];var e={x:m==Infinity?seg[2]:seg[2]>seg[0]?seg[0]+((1-p)*sl)-distance:seg[2]+(p*sl)+distance,y:m==0?seg[3]:seg[3]>seg[1]?seg[1]+((1-p)*sl)-distance:seg[3]+(p*sl)+distance,segmentInfo:s};return e;};};jsPlumb.Endpoints.Dot=function(params){this.type="Dot";var self=this;params=params||{};this.radius=params.radius||10;this.defaultOffset=0.5*this.radius;this.defaultInnerRadius=this.radius/3;this.compute=function(anchorPoint,orientation,endpointStyle,connectorPaintStyle){var r=endpointStyle.radius||self.radius,x=anchorPoint[0]-r,y=anchorPoint[1]-r;return[x,y,r*2,r*2,r];};};jsPlumb.Endpoints.Rectangle=function(params){this.type="Rectangle";var self=this;params=params||{};this.width=params.width||20;this.height=params.height||20;this.compute=function(anchorPoint,orientation,endpointStyle,connectorPaintStyle){var width=endpointStyle.width||self.width,height=endpointStyle.height||self.height,x=anchorPoint[0]-(width/2),y=anchorPoint[1]-(height/2);return[x,y,width,height];};};var DOMElementEndpoint=function(params){jsPlumb.DOMElementComponent.apply(this,arguments);var self=this;var displayElements=[];this.getDisplayElements=function(){return displayElements;};this.appendDisplayElement=function(el){displayElements.push(el);};};jsPlumb.Endpoints.Image=function(params){this.type="Image";DOMElementEndpoint.apply(this,arguments);var self=this,initialized=false,deleted=false,widthToUse=params.width,heightToUse=params.height,_onload=null,_endpoint=params.endpoint;this.img=new Image();self.ready=false;this.img.onload=function(){self.ready=true;widthToUse=widthToUse||self.img.width;heightToUse=heightToUse||self.img.height;if(_onload){_onload(self);}};_endpoint.setImage=function(img,onload){var s=img.constructor==String?img:img.src;_onload=onload;self.img.src=img;if(self.canvas!=null)
self.canvas.setAttribute("src",img);};_endpoint.setImage(params.src||params.url,params.onload);this.compute=function(anchorPoint,orientation,endpointStyle,connectorPaintStyle){self.anchorPoint=anchorPoint;if(self.ready)return[anchorPoint[0]-widthToUse/2,anchorPoint[1]-heightToUse/2,widthToUse,heightToUse];else return[0,0,0,0];};self.canvas=document.createElement("img"),initialized=false;self.canvas.style["margin"]=0;self.canvas.style["padding"]=0;self.canvas.style["outline"]=0;self.canvas.style["position"]="absolute";var clazz=params.cssClass?" "+params.cssClass:"";self.canvas.className=jsPlumb.endpointClass+clazz;if(widthToUse)self.canvas.setAttribute("width",widthToUse);if(heightToUse)self.canvas.setAttribute("height",heightToUse);jsPlumb.appendElement(self.canvas,params.parent);self.attachListeners(self.canvas,self);self.cleanup=function(){deleted=true;};var actuallyPaint=function(d,style,anchor){if(!deleted){if(!initialized){self.canvas.setAttribute("src",self.img.src);self.appendDisplayElement(self.canvas);initialized=true;}
var x=self.anchorPoint[0]-(widthToUse/2),y=self.anchorPoint[1]-(heightToUse/2);jsPlumb.sizeCanvas(self.canvas,x,y,widthToUse,heightToUse);}};this.paint=function(d,style,anchor){if(self.ready){actuallyPaint(d,style,anchor);}
else{window.setTimeout(function(){self.paint(d,style,anchor);},200);}};};jsPlumb.Endpoints.Blank=function(params){var self=this;this.type="Blank";DOMElementEndpoint.apply(this,arguments);this.compute=function(anchorPoint,orientation,endpointStyle,connectorPaintStyle){return[anchorPoint[0],anchorPoint[1],10,0];};self.canvas=document.createElement("div");self.canvas.style.display="block";self.canvas.style.width="1px";self.canvas.style.height="1px";self.canvas.style.background="transparent";self.canvas.style.position="absolute";self.canvas.className=self._jsPlumb.endpointClass;jsPlumb.appendElement(self.canvas,params.parent);this.paint=function(d,style,anchor){jsPlumb.sizeCanvas(self.canvas,d[0],d[1],d[2],d[3]);};};jsPlumb.Endpoints.Triangle=function(params){this.type="Triangle";params=params||{};params.width=params.width||55;params.height=params.height||55;this.width=params.width;this.height=params.height;this.compute=function(anchorPoint,orientation,endpointStyle,connectorPaintStyle){var width=endpointStyle.width||self.width,height=endpointStyle.height||self.height,x=anchorPoint[0]-(width/2),y=anchorPoint[1]-(height/2);return[x,y,width,height];};};var AbstractOverlay=function(params){var visible=true,self=this;this.isAppendedAtTopLevel=true;this.component=params.component;this.loc=params.location==null?0.5:params.location;this.endpointLoc=params.endpointLocation==null?[0.5,0.5]:params.endpointLocation;this.setVisible=function(val){visible=val;self.component.repaint();};this.isVisible=function(){return visible;};this.hide=function(){self.setVisible(false);};this.show=function(){self.setVisible(true);};this.incrementLocation=function(amount){self.loc+=amount;self.component.repaint();};this.setLocation=function(l){self.loc=l;self.component.repaint();};this.getLocation=function(){return self.loc;};};jsPlumb.Overlays.Arrow=function(params){this.type="Arrow";AbstractOverlay.apply(this,arguments);this.isAppendedAtTopLevel=false;params=params||{};var self=this;this.length=params.length||20;this.width=params.width||20;this.id=params.id;var direction=(params.direction||1)<0?-1:1,paintStyle=params.paintStyle||{lineWidth:1},foldback=params.foldback||0.623;this.computeMaxSize=function(){return self.width*1.5;};this.cleanup=function(){};this.draw=function(connector,currentConnectionPaintStyle,connectorDimensions){var hxy,mid,txy,tail,cxy;if(connector.pointAlongPathFrom){if(jsPlumbUtil.isString(self.loc)||self.loc>1||self.loc<0){var l=parseInt(self.loc);hxy=connector.pointAlongPathFrom(l,direction*self.length/2,true),mid=connector.pointOnPath(l,true),txy=jsPlumbUtil.pointOnLine(hxy,mid,self.length);}
else if(self.loc==1){hxy=connector.pointOnPath(self.loc);mid=connector.pointAlongPathFrom(self.loc,-1);txy=jsPlumbUtil.pointOnLine(hxy,mid,self.length);}
else if(self.loc==0){txy=connector.pointOnPath(self.loc);mid=connector.pointAlongPathFrom(self.loc,1);hxy=jsPlumbUtil.pointOnLine(txy,mid,self.length);}
else{hxy=connector.pointAlongPathFrom(self.loc,direction*self.length/2),mid=connector.pointOnPath(self.loc),txy=jsPlumbUtil.pointOnLine(hxy,mid,self.length);}
tail=jsPlumbUtil.perpendicularLineTo(hxy,txy,self.width);cxy=jsPlumbUtil.pointOnLine(hxy,txy,foldback*self.length);var minx=Math.min(hxy.x,tail[0].x,tail[1].x),maxx=Math.max(hxy.x,tail[0].x,tail[1].x),miny=Math.min(hxy.y,tail[0].y,tail[1].y),maxy=Math.max(hxy.y,tail[0].y,tail[1].y);var d={hxy:hxy,tail:tail,cxy:cxy},strokeStyle=paintStyle.strokeStyle||currentConnectionPaintStyle.strokeStyle,fillStyle=paintStyle.fillStyle||currentConnectionPaintStyle.strokeStyle,lineWidth=paintStyle.lineWidth||currentConnectionPaintStyle.lineWidth;self.paint(connector,d,lineWidth,strokeStyle,fillStyle,connectorDimensions);return[minx,maxx,miny,maxy];}
else return[0,0,0,0];};};jsPlumb.Overlays.PlainArrow=function(params){params=params||{};var p=jsPlumb.extend(params,{foldback:1});jsPlumb.Overlays.Arrow.call(this,p);this.type="PlainArrow";};jsPlumb.Overlays.Diamond=function(params){params=params||{};var l=params.length||40,p=jsPlumb.extend(params,{length:l/2,foldback:2});jsPlumb.Overlays.Arrow.call(this,p);this.type="Diamond";};var AbstractDOMOverlay=function(params){jsPlumb.DOMElementComponent.apply(this,arguments);AbstractOverlay.apply(this,arguments);var self=this,initialised=false;params=params||{};this.id=params.id;var div;var makeDiv=function(){div=params.create(params.component);div=jsPlumb.CurrentLibrary.getDOMElement(div);div.style["position"]="absolute";var clazz=params["_jsPlumb"].overlayClass+" "+(self.cssClass?self.cssClass:params.cssClass?params.cssClass:"");div.className=clazz;jsPlumb.appendElement(div,params.component.parent);params["_jsPlumb"].getId(div);self.attachListeners(div,self);self.canvas=div;};this.getElement=function(){if(div==null){makeDiv();}
return div;};this.getDimensions=function(){return jsPlumb.CurrentLibrary.getSize(jsPlumb.CurrentLibrary.getElementObject(self.getElement()));};var cachedDimensions=null,_getDimensions=function(component){if(cachedDimensions==null)
cachedDimensions=self.getDimensions();return cachedDimensions;};this.clearCachedDimensions=function(){cachedDimensions=null;};this.computeMaxSize=function(){var td=_getDimensions();return Math.max(td[0],td[1]);};var osv=self.setVisible;self.setVisible=function(state){osv(state);div.style.display=state?"block":"none";};this.cleanup=function(){if(div!=null)jsPlumb.CurrentLibrary.removeElement(div);};this.paint=function(component,d,componentDimensions){if(!initialised){self.getElement();component.appendDisplayElement(div);self.attachListeners(div,component);initialised=true;}
div.style.left=(componentDimensions[0]+d.minx)+"px";div.style.top=(componentDimensions[1]+d.miny)+"px";};this.draw=function(component,currentConnectionPaintStyle,componentDimensions){var td=_getDimensions();if(td!=null&&td.length==2){var cxy={x:0,y:0};if(component.pointOnPath){var loc=self.loc,absolute=false;if(jsPlumbUtil.isString(self.loc)||self.loc<0||self.loc>1){loc=parseInt(self.loc);absolute=true;}
cxy=component.pointOnPath(loc,absolute);}
else{var locToUse=self.loc.constructor==Array?self.loc:self.endpointLoc;cxy={x:locToUse[0]*componentDimensions[2],y:locToUse[1]*componentDimensions[3]};}
minx=cxy.x-(td[0]/2),miny=cxy.y-(td[1]/2);self.paint(component,{minx:minx,miny:miny,td:td,cxy:cxy},componentDimensions);return[minx,minx+td[0],miny,miny+td[1]];}
else return[0,0,0,0];};this.reattachListeners=function(connector){if(div){self.reattachListenersForElement(div,self,connector);}};};jsPlumb.Overlays.Custom=function(params){this.type="Custom";AbstractDOMOverlay.apply(this,arguments);};jsPlumb.Overlays.Label=function(params){var self=this;this.labelStyle=params.labelStyle||jsPlumb.Defaults.LabelStyle;this.cssClass=this.labelStyle!=null?this.labelStyle.cssClass:null;params.create=function(){return document.createElement("div");};jsPlumb.Overlays.Custom.apply(this,arguments);this.type="Label";var label=params.label||"",self=this,labelText=null;this.setLabel=function(l){label=l;labelText=null;self.clearCachedDimensions();_update();self.component.repaint();};var _update=function(){if(typeof label=="function"){var lt=label(self);self.getElement().innerHTML=lt.replace(/\r\n/g,"<br/>");}
else{if(labelText==null){labelText=label;self.getElement().innerHTML=labelText.replace(/\r\n/g,"<br/>");}}};this.getLabel=function(){return label;};var superGD=this.getDimensions;this.getDimensions=function(){_update();return superGD();};};})();